{
  "additionalProperties": false,
  "description": "Modifies the original Settings class provided by the user",
  "properties": {
    "db_connection_str": {
      "description": "MongoDB connection string. Might include credentials. For more information see: https://naiveskill.com/mongodb-connection-string/",
      "examples": [
        "mongodb://localhost:27017"
      ],
      "format": "password",
      "title": "Db Connection Str",
      "type": "string",
      "writeOnly": true
    },
    "db_name": {
      "description": "Name of the database located on the MongoDB server.",
      "examples": [
        "my-database"
      ],
      "title": "Db Name",
      "type": "string"
    },
    "notification_event_topic": {
      "description": "Name of the topic used for notification events.",
      "examples": [
        "notifications"
      ],
      "title": "Notification Event Topic",
      "type": "string"
    },
    "notification_event_type": {
      "description": "The type used for notification events.",
      "examples": [
        "notification"
      ],
      "title": "Notification Event Type",
      "type": "string"
    },
    "user_events_topic": {
      "default": "users",
      "description": "The name of the topic containing user events.",
      "title": "User Events Topic",
      "type": "string"
    },
    "access_request_events_topic": {
      "description": "Name of the event topic used to consume access request events",
      "examples": [
        "access_requests"
      ],
      "title": "Access Request Events Topic",
      "type": "string"
    },
    "access_request_created_event_type": {
      "description": "The type to use for access request created events",
      "examples": [
        "access_request_created"
      ],
      "title": "Access Request Created Event Type",
      "type": "string"
    },
    "access_request_allowed_event_type": {
      "description": "The type to use for access request allowed events",
      "examples": [
        "access_request_allowed"
      ],
      "title": "Access Request Allowed Event Type",
      "type": "string"
    },
    "access_request_denied_event_type": {
      "description": "The type to use for access request denied events",
      "examples": [
        "access_request_denied"
      ],
      "title": "Access Request Denied Event Type",
      "type": "string"
    },
    "file_registered_event_topic": {
      "description": "The name of the topic containing internal file registration events.",
      "examples": [
        "internal_file_registry"
      ],
      "title": "File Registered Event Topic",
      "type": "string"
    },
    "file_registered_event_type": {
      "description": "The type used for events detailing internally file registrations.",
      "examples": [
        "file_registered"
      ],
      "title": "File Registered Event Type",
      "type": "string"
    },
    "iva_state_changed_event_topic": {
      "description": "The name of the topic containing IVA events.",
      "examples": [
        "ivas"
      ],
      "title": "Iva State Changed Event Topic",
      "type": "string"
    },
    "iva_state_changed_event_type": {
      "description": "The type to use for iva state changed events.",
      "examples": [
        "iva_state_changed"
      ],
      "title": "Iva State Changed Event Type",
      "type": "string"
    },
    "second_factor_recreated_event_topic": {
      "description": "The name of the topic containing second factor recreation events.",
      "examples": [
        "auth"
      ],
      "title": "Second Factor Recreated Event Topic",
      "type": "string"
    },
    "second_factor_recreated_event_type": {
      "description": "The event type for recreation of the second factor for authentication",
      "examples": [
        "second_factor_recreated"
      ],
      "title": "Second Factor Recreated Event Type",
      "type": "string"
    },
    "service_name": {
      "default": "nos",
      "description": "The Notification Orchestration Service controls the creation of notification events.",
      "title": "Service Name",
      "type": "string"
    },
    "service_instance_id": {
      "description": "A string that uniquely identifies this instance across all instances of this service. This is included in log messages.",
      "examples": [
        "germany-bw-instance-001"
      ],
      "title": "Service Instance Id",
      "type": "string"
    },
    "kafka_servers": {
      "description": "A list of connection strings to connect to Kafka bootstrap servers.",
      "examples": [
        [
          "localhost:9092"
        ]
      ],
      "items": {
        "type": "string"
      },
      "title": "Kafka Servers",
      "type": "array"
    },
    "kafka_security_protocol": {
      "default": "PLAINTEXT",
      "description": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL.",
      "enum": [
        "PLAINTEXT",
        "SSL"
      ],
      "title": "Kafka Security Protocol",
      "type": "string"
    },
    "kafka_ssl_cafile": {
      "default": "",
      "description": "Certificate Authority file path containing certificates used to sign broker certificates. If a CA is not specified, the default system CA will be used if found by OpenSSL.",
      "title": "Kafka Ssl Cafile",
      "type": "string"
    },
    "kafka_ssl_certfile": {
      "default": "",
      "description": "Optional filename of client certificate, as well as any CA certificates needed to establish the certificate's authenticity.",
      "title": "Kafka Ssl Certfile",
      "type": "string"
    },
    "kafka_ssl_keyfile": {
      "default": "",
      "description": "Optional filename containing the client private key.",
      "title": "Kafka Ssl Keyfile",
      "type": "string"
    },
    "kafka_ssl_password": {
      "default": "",
      "description": "Optional password to be used for the client private key.",
      "format": "password",
      "title": "Kafka Ssl Password",
      "type": "string",
      "writeOnly": true
    },
    "generate_correlation_id": {
      "default": true,
      "description": "A flag, which, if False, will result in an error when trying to publish an event without a valid correlation ID set for the context. If True, the a newly correlation ID will be generated and used in the event header.",
      "examples": [
        true,
        false
      ],
      "title": "Generate Correlation Id",
      "type": "boolean"
    },
    "kafka_max_message_size": {
      "default": 1048576,
      "description": "The largest message size that can be transmitted, in bytes. Only services that have a need to send/receive larger messages should set this.",
      "examples": [
        1048576,
        16777216
      ],
      "exclusiveMinimum": 0,
      "title": "Kafka Max Message Size",
      "type": "integer"
    },
    "log_level": {
      "default": "INFO",
      "description": "The minimum log level to capture.",
      "enum": [
        "CRITICAL",
        "ERROR",
        "WARNING",
        "INFO",
        "DEBUG",
        "TRACE"
      ],
      "title": "Log Level",
      "type": "string"
    },
    "log_format": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "If set, will replace JSON formatting with the specified string format. If not set, has no effect. In addition to the standard attributes, the following can also be specified: timestamp, service, instance, level, correlation_id, and details",
      "examples": [
        "%(timestamp)s - %(service)s - %(level)s - %(message)s",
        "%(asctime)s - Severity: %(levelno)s - %(msg)s"
      ],
      "title": "Log Format"
    },
    "log_traceback": {
      "default": true,
      "description": "Whether to include exception tracebacks in log messages.",
      "title": "Log Traceback",
      "type": "boolean"
    },
    "central_data_stewardship_email": {
      "description": "The email address of the central data steward.",
      "title": "Central Data Stewardship Email",
      "type": "string"
    },
    "helpdesk_email": {
      "description": "The email address of the GHGA Helpdesk.",
      "title": "Helpdesk Email",
      "type": "string"
    }
  },
  "required": [
    "db_connection_str",
    "db_name",
    "notification_event_topic",
    "notification_event_type",
    "access_request_events_topic",
    "access_request_created_event_type",
    "access_request_allowed_event_type",
    "access_request_denied_event_type",
    "file_registered_event_topic",
    "file_registered_event_type",
    "iva_state_changed_event_topic",
    "iva_state_changed_event_type",
    "second_factor_recreated_event_topic",
    "second_factor_recreated_event_type",
    "service_instance_id",
    "kafka_servers",
    "central_data_stewardship_email",
    "helpdesk_email"
  ],
  "title": "ModSettings",
  "type": "object"
}